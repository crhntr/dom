// Code generated by muxt. DO NOT EDIT.
// muxt version: v0.13.0-pre.1

package blog

import (
	"bytes"
	"net/http"
	"strconv"
)

type RoutesReceiver interface {
	Article(id int) Article
}

func Routes(mux *http.ServeMux, receiver RoutesReceiver) {
	mux.HandleFunc("GET /article/{id}", func(response http.ResponseWriter, request *http.Request) {
		idParsed, err := strconv.Atoi(request.PathValue("id"))
		if err != nil {
			http.Error(response, err.Error(), http.StatusBadRequest)
			return
		}
		id := idParsed
		data := receiver.Article(id)
		buf := bytes.NewBuffer(nil)
		rd := newTemplateData(data, request)
		if err := templates.ExecuteTemplate(buf, "GET /article/{id} Article(id)", rd); err != nil {
			http.Error(response, err.Error(), http.StatusInternalServerError)
			return
		}
		response.Header().Set("content-type", "text/html; charset=utf-8")
		response.WriteHeader(http.StatusOK)
		_, _ = buf.WriteTo(response)
	})
}

type TemplateData[T any] struct {
	Request *http.Request
	Data    T
}

func newTemplateData[T any](data T, request *http.Request) TemplateData[T] {
	return TemplateData[T]{Data: data, Request: request}
}
